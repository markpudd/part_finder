group 'com.invoax.partfinder'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE")
        classpath "io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE"

    }
    repositories {
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
    }
}


subprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'java'

    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-netflix:1.0.4.RELEASE'
        }
    }


    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile("org.springframework.boot:spring-boot-starter-web:1.3.1.RELEASE")
    }

}


project(':PartService') {
    apply plugin: 'spring-boot'
    jar { baseName = 'PartService' }
    description = "Service to deal with part information"
    dependencies {
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile("org.mongodb:mongo-java-driver:3.0.4")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb:1.3.1.RELEASE")
        compile("org.springframework.boot:spring-boot-starter-data-rest:1.3.1.RELEASE")
    }
}


project(':StoreService') {
    apply plugin: 'spring-boot'
    jar { baseName = 'StoreService' }
    description = "Service to deal with store information"
    dependencies {
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile 'org.springframework.cloud:spring-cloud-starter-feign'
        compile("org.mongodb:mongo-java-driver:3.0.4")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb:1.3.1.RELEASE")
        compile("org.springframework.boot:spring-boot-starter-data-rest:1.3.1.RELEASE")
    }
}


project(':PickListService') {
    apply plugin: 'spring-boot'
    jar { baseName = 'PickListService' }
    description = "Service to deal with picklist information"
    dependencies {
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile 'org.springframework.cloud:spring-cloud-starter-feign'
        compile("org.mongodb:mongo-java-driver:3.0.4")
        compile("org.springframework.boot:spring-boot-starter-data-mongodb:1.3.1.RELEASE")
        compile("org.springframework.boot:spring-boot-starter-data-rest:1.3.1.RELEASE")
    }
}

project(':Eureka') {
    apply plugin: 'spring-boot'
    jar { baseName = 'Eureka' }
    description = "Eureka"
    dependencies {
        compile 'org.springframework.cloud:spring-cloud-starter-eureka-server'
    }
}

project(':PartFinder-Web') {
    apply plugin: 'spring-boot'
    jar { baseName = 'PartFinder-Web' }
    description = "Partfinder web app"
    dependencies {
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile 'org.springframework.cloud:spring-cloud-starter-feign'
        compile('org.springframework.cloud:spring-cloud-starter-zuul')
        compile("org.springframework.boot:spring-boot-starter-thymeleaf")
        compile("org.webjars.bower:jquery:2.1.4")
        compile("org.webjars:bootstrap:3.2.0")
        compile("org.webjars.bower:angularjs:1.4.7")
        compile("org.webjars.bower:angular-route:1.4.7")
        compile("org.webjars.bower:angular-resource:1.4.7")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
